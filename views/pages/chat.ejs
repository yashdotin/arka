<% layout('/layouts/boilerplate.ejs') %>

<div class="chat-container">
  <div class="chat-window" id="chatWindow">
    <% if (messages && messages.length) { %>
      <% messages.forEach(message => { %>
        <div class="chat-message <%= message.sender === currentUser ? 'user' : 'other' %>">
          <p><%= message.text %></p>
          <span class="time"><%= message.time %></span>
        </div>
      <% }) %>
    <% } else { %>
      <div class="empty-chat">Start a conversation with Arkaüí¨</div>
    <% } %>
  </div>

  <form class="chat-form" id="chatForm">
    <input type="text" name="message" placeholder="Type a message..." autocomplete="off" required>
    <button type="submit"><i class="fa-solid fa-paper-plane"></i></button>
  </form>
</div>

<script>
const chatForm = document.getElementById('chatForm');
const chatWindow = document.getElementById('chatWindow');
const input = chatForm.message;

// Scroll helper
function scrollToBottom() {
  chatWindow.scrollTop = chatWindow.scrollHeight;
}

// Add message helper
function addMessage(text, sender = 'user') {
  const time = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
  const msgDiv = document.createElement('div');
  msgDiv.className = `chat-message ${sender}`;
  msgDiv.innerHTML = `<p>${text}</p><span class="time">${time}</span>`;
  chatWindow.appendChild(msgDiv);
  scrollToBottom();
}

// Handle form submit
chatForm.addEventListener('submit', async (e) => {
  e.preventDefault();
  const text = input.value.trim();
  if (!text) return;

  addMessage(text, 'user');
  input.value = '';

  try {
    const res = await fetch('/chat/send', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ message: text })
    });

    const data = await res.json();

    if (data.reply) {
      addMessage(data.reply, 'other');
    } else {
      addMessage('No response from AI.', 'other');
    }
  } catch (err) {
    console.error(err);
    addMessage('‚ö†Ô∏è Failed to get a response.', 'other');
  }
});

scrollToBottom();
</script>

<style>
.chat-container {
  display: flex;
  flex-direction: column;
  height: 90vh;
  max-width: 700px;
  margin: auto;
  background: #f7f7f7;
  border-radius: 16px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.chat-window {
  flex: 1;
  overflow-y: auto;
  padding: 15px;
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.chat-message {
  max-width: 75%;
  padding: 10px 14px;
  border-radius: 12px;
  word-wrap: break-word;
  position: relative;
}

.chat-message.user {
  align-self: flex-end;
  background: #007bff;
  color: #fff;
}

.chat-message.other {
  align-self: flex-start;
  background: #e5e5ea;
  color: #000;
}

.time {
  display: block;
  font-size: 0.75rem;
  opacity: 0.6;
  margin-top: 4px;
  text-align: right;
}

.chat-form {
  display: flex;
  padding: 10px;
  background: #fff;
  border-top: 1px solid #ddd;
}

.chat-form input {
  flex: 1;
  padding: 10px;
  border-radius: 20px;
  border: 1px solid #ccc;
  outline: none;
}

.chat-form button {
  border: none;
  background: #007bff;
  color: #fff;
  border-radius: 50%;
  width: 42px;
  height: 42px;
  margin-left: 8px;
  cursor: pointer;
}

.empty-chat {
  text-align: center;
  color: #aaa;
  margin-top: 20px;
}
</style>
